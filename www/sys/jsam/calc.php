<?

// calculate 3 part sum with vars
// --------------------------------------------------------------------------------------
   Jsam::set('calc', function($dfn, $vrs)
   {
   // prep sum data
   // -----------------------------------------------------------------------------------
      foreach ($dfn as $idx => $itm)
      {
         if ($idx !== 1)
         {
            $itm = parse::text($itm,$vrs);

            if (typeOf($itm) === str)
            {
               $pts = str_split($itm);

               if ($pts[0] === chr(171))
               {
                  $ref = null;
                  $itm = substr($itm, 1, -1);
               }
               else
               {
                  $ref = $itm;
                  $itm = map::get($vrs, $itm);
               }
            }

            $dfn[$idx] = $itm;
         }
      }

      $lft = $dfn[0];
      $opr = $dfn[1];
      $rgt = $dfn[2];

      $dtp = substr(typeOf($lft), 0, 3).substr(typeOf($rgt), 0, 3);
   // -----------------------------------------------------------------------------------



   // plus
   // -----------------------------------------------------------------------------------
      if ($opr == '+')
      {
      // nul cases
      // --------------------------------------------------------------------------------
         if (($lft === null) || ($lft === ''))
         { return $rgt; }

         if (($rgt === null) || ($rgt === ''))
         { return $lft; }
      // --------------------------------------------------------------------------------

      // quick cases
      // --------------------------------------------------------------------------------
         switch ($dtp)
         {
            case 'intint' : return ($lft+$rgt);
            case 'intflo' : return ($lft+$rgt);
            case 'floint' : return ($lft+$rgt);
            case 'floflo' : return ($lft+$rgt);
            case 'intstr' : return ($lft.$rgt);
            case 'flostr' : return ($lft.$rgt);
            case 'strint' : return ($lft.$rgt);
            case 'strflo' : return ($lft.$rgt);
            case 'strstr' : return ($lft.$rgt);
         }
      // --------------------------------------------------------------------------------

      // obj + obj
      // --------------------------------------------------------------------------------
         if ($dtp === 'objobj')
         {
            foreach ($rgt as $k => $v)
            { $lft->$k = $v; }

            return $lft;
         }
      // --------------------------------------------------------------------------------
      }
   // -----------------------------------------------------------------------------------



   // subtract
   // -----------------------------------------------------------------------------------
      if ($opr == '-')
      {
      // asterisk cases
      // --------------------------------------------------------------------------------
         if (($dtp == 'strstr') && (strpos($rgt, '*') !== false))
         {
            $rp = explode('*', $rgt);

            if (count($rp) > 2)
            { return explode($rp[1], $lft)[1]; }

            if (substr($rgt, 0, 1) == '*')
            { return explode($rp[1], $lft)[1]; }

            if (substr($rgt, -1, 1) == '*')
            { return explode($rp[0], $lft)[0]; }
         }
      // --------------------------------------------------------------------------------


      // quick cases
      // --------------------------------------------------------------------------------
         switch ($dtp)
         {
            case 'intint' : return ($lft - $rgt);
            case 'intflo' : return ($lft - $rgt);
            case 'floint' : return ($lft - $rgt);
            case 'floflo' : return ($lft - $rgt);
            case 'intstr' : return substr($rgt, $lft, strlen($rgt));
            case 'strint' : return substr($lft, 0, (0-$rgt));
            case 'strstr' : return str_replace($rgt, '', $lft);
         }
      // --------------------------------------------------------------------------------
      }
   // -----------------------------------------------------------------------------------



   // multiply
   // -----------------------------------------------------------------------------------
      if ($opr == '*')
      {
      // quick cases
      // --------------------------------------------------------------------------------
         switch ($dtp)
         {
            case 'intint' : return ($lft * $rgt);
            case 'intflo' : return ($lft * $rgt);
            case 'floint' : return ($lft * $rgt);
            case 'floflo' : return ($lft * $rgt);
         }
      // --------------------------------------------------------------------------------
      }
   // -----------------------------------------------------------------------------------



   // devide
   // -----------------------------------------------------------------------------------
      if ($opr == '/')
      {
      // fix zero denominators
      // --------------------------------------------------------------------------------
         if (($rgt === 0) || ($rgt === '') || ($rgt === null) || (typeOf($rgt) === bln))
         { return null; }
      // --------------------------------------------------------------------------------

      // quick cases
      // --------------------------------------------------------------------------------
         switch ($dtp)
         {
            case 'intint' : return ($lft / $rgt);
            case 'strint' : return str_split($lft, $rgt);
            case 'strstr' : return explode($lft, $rgt);
         }
      // --------------------------------------------------------------------------------
      }
   // -----------------------------------------------------------------------------------



   // "less than" and "greater than"
   // -----------------------------------------------------------------------------------
      if (($opr == '<') || ($opr == '>'))
      {
      // for string length comparrisson
      // --------------------------------------------------------------------------------
         if ($dtp == 'strnum')
         { $lft = strlen($lft); }
         elseif ($dtp == 'strstr')
         {
            $lft = strlen($lft);
            $rgt = strlen($rgt);
         }
      // --------------------------------------------------------------------------------

      // less than
      // --------------------------------------------------------------------------------
         if (($opr == '<') && ($lft < $rgt))
         { return true; }
      // --------------------------------------------------------------------------------

      // greater than
      // --------------------------------------------------------------------------------
         if (($opr == '>') && ($lft > $rgt))
         { return true; }
      // --------------------------------------------------------------------------------

      // default
      // --------------------------------------------------------------------------------
         return false;
      // --------------------------------------------------------------------------------
      }
   // -----------------------------------------------------------------------------------



   // terinary :: if
   // -----------------------------------------------------------------------------------
      if ($opr == '?')
      {
         if (($lft === null) || ($lft === false) || (length($lft) < 1))
         { return null; }

         return $rgt;
      }
   // -----------------------------------------------------------------------------------



   // terinary :: else
   // -----------------------------------------------------------------------------------
      if ($opr == ':')
      {
         if (($lft === null) || ($lft === false) || (length($lft) < 1))
         { return $rgt; }

         return $lft;
      }
   // -----------------------------------------------------------------------------------



   // double operators
   // -----------------------------------------------------------------------------------
      if (strlen($opr) == 2)
      {
      // comparrisson
      // --------------------------------------------------------------------------------
         if (strpos('== != <= >=', $opr) !== false)
         {
         // for string length comparrisson
         // -----------------------------------------------------------------------------
            if (($opr !== '==') && ($opr !== '!='))
            {
               if ($dtp == 'strnum')
               { $lft = strlen($lft); }
               elseif ($dtp == 'strstr')
               {
                  $lft = strlen($lft);
                  $rgt = strlen($rgt);
               }
            }
         // -----------------------------------------------------------------------------

         // asterisk (substr)
         // -----------------------------------------------------------------------------
            if (is::str($lft))
            {
               $lap = explode('*', $lft);
               $lac = count($lap);
               $lsp = strpos($lft, '*');
               $lsl = strlen($lft);

               if ($lac > 1)
               {
                  if ($lac === 2)
                  { $lft = ((strlen($lap[0]) > 0) ? $lap[0] : $lap[1]); }
                  elseif ($lac === 3)
                  { $lft = $lap[1]; }

                  if ($lac === 2)
                  { $rgt = (($lsp > 0) ? substr($rgt, 0, strlen($lft)) : substr($rgt, strpos($rgt, $lft), $rsl)); }
                  elseif (($lac === 3) && (strpos($rgt, $lft) !== false))
                  { $rgt = $lft; }
               }
            }

            if (is::str($rgt))
            {
               $rap = explode('*', $rgt);
               $rac = count($rap);
               $rsp = strpos($rgt, '*');
               $rsl = strlen($rgt);

               if ($rac > 1)
               {
                  if ($rac === 2)
                  { $rgt = ((strlen($rap[0]) > 0) ? $rap[0] : $rap[1]); }
                  elseif ($rac === 3)
                  { $rgt = $rap[1]; }

                  if ($rac === 2)
                  { $lft = (($rsp > 0) ? substr($lft, 0, strlen($rgt)) : substr($lft, strpos($lft, $rgt), $lsl)); }
                  elseif (($rac === 3) && (strpos($lft, $rgt) !== false))
                  { $lft = $rgt; }
               }
            }
         // -----------------------------------------------------------------------------

         // quick cases
         // -----------------------------------------------------------------------------
            switch ($opr)
            {
               case '==' : return (($lft === $rgt) ? true : false);
               case '!=' : return (($lft !== $rgt) ? true : false);
               case '<=' : return (($lft <= $rgt) ? true : false);
               case '>=' : return (($lft >= $rgt) ? true : false);
            }
         // -----------------------------------------------------------------------------
         }
      // --------------------------------------------------------------------------------


      // logical or
      // --------------------------------------------------------------------------------
         if ($opr === '||')
         {
            if (($lft === null) || ($lft === false) || (length($lft) < 1))
            { return $rgt; }

            return $lft;
         }
      // --------------------------------------------------------------------------------
      }
   // -----------------------------------------------------------------------------------

   // return null as default
   // -----------------------------------------------------------------------------------
      return null;
   // -----------------------------------------------------------------------------------
   });
// --------------------------------------------------------------------------------------

?>
