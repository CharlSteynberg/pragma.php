<?

// read contents of folder or file, parse auto/optional with vars
// --------------------------------------------------------------------------------------
   Path::set('read', function($pth, $vrs=null)
   {
   // convert data type, take first key
   // -----------------------------------------------------------------------------------
      if (typeOf($pth) === arr){ $pth = new obj($pth); }
      if (typeOf($pth) === obj)
      {
         reset($pth);

         $vrs = (($vrs === null) ? new obj() : new obj($vrs));

         if (isset($pth->srcPth))
         {
            $src = $pth->srcPth; unset($pth->srcPth);
            foreach ($pth as $k => $v){ $vrs->$k = $v; }
            $pth = $src;
         }
      }
   // -----------------------------------------------------------------------------------

   // halt on error
   // -----------------------------------------------------------------------------------
      if (!is_readable(CWD.'/'.$pth))
      {
         $sts = (!file_exists(CWD.'/'.$pth) ? [404,'undefined'] : [403,'forbidden']);
         $pth = ((substr($pth, 0, 4) === 'pub/') ? substr($pth, 4, strlen($pth)) : $pth);

         if (client::get('req.pth') === $pth)
         { server::respond($sts[0], '"'.$pth.'" is '.$sts[1]); }
         else
         { throw new Exception('"'.$pth.'" is '.$sts[1]); }
      }
   // -----------------------------------------------------------------------------------


   // locals
   // -----------------------------------------------------------------------------------
      $inf = path::info($pth);                                       // path info
      $rsl = new obj(['head'=>['HTTP/1.0 200 OK'], 'body'=>'']);     // result
   // -----------------------------------------------------------------------------------


   // dir :: response
   // -----------------------------------------------------------------------------------
      if ($inf->type === 'dir')
      {
      // deny public dir reading
      // --------------------------------------------------------------------------------
         if (client::get('req.vrs.0') === $pth)
         { server::respond(403); return; }
      // --------------------------------------------------------------------------------

      // response is object
      // --------------------------------------------------------------------------------
         $r = new obj();
         $h = opendir($pth);

         while (false !== ($i = readdir($h)))
         {
            if ($i[0] != '.')
            { $r->$i = path::info("$pth/$i"); }
         }

         $h = closedir($h);

         return $r;
      // --------------------------------------------------------------------------------
      }
   // -----------------------------------------------------------------------------------


   // file :: response
   // -----------------------------------------------------------------------------------
      if ($inf->type === 'file')
      {
      // deny public reading
      // --------------------------------------------------------------------------------
         $dny = ['php'];

         if ((client::get('req.vrs.0') === $pth) && in_array($inf->extn, $dny))
         { server::respond(403); return; }
      // --------------------------------------------------------------------------------

      // jsam
      // --------------------------------------------------------------------------------
         if ($inf->extn === 'jsam')
         { return jsam::build($pth, $vrs); }
      // --------------------------------------------------------------------------------

      // other
      // --------------------------------------------------------------------------------
         $rsl->head[] = 'Content-Type: '.$inf->mime;
         $rsl->head[] = 'Content-Length: '.$inf->size;

         $rsl->body = file_get_contents($pth);

         return $rsl;
      // --------------------------------------------------------------------------------
      }
   // -----------------------------------------------------------------------------------
   });
// --------------------------------------------------------------------------------------

?>
