<?

// respond :: server method
// --------------------------------------------------------------------------------------
   server::set('respond', function($rsp, $msg=null)
   {
   // locals
   // -----------------------------------------------------------------------------------
      $rsp = ((length($rsp) < 1) ? 204 : $rsp);
      $tpe = typeOf($rsp);
   // -----------------------------------------------------------------------------------


   // make response object
   // -----------------------------------------------------------------------------------
      if (($tpe !== obj) || (($tpe === obj) && (!isset($rsp->head) && !isset($rsp->body))))
      {
         if (($tpe === int) && (server::get('conf.statCode.'.$rsp) !== null))
         {
            $sts = $rsp;
            $dsc = server::get('conf.statCode.'.$sts);

            $msg = (($msg === null) ? 'Undefined' : to::str($msg));
            $msg = ((str::typeOf($msg) === pth) ? '"'.trim($msg, '/').'"' : $msg);

            $vrs = new obj(['titl'=>'Server Message', 'code'=>$sts, 'desc'=>$dsc, 'mesg'=>$msg]);
            $pth = 'pub/doc/server/message.jsam';

         // set server address
         // -----------------------------------------------------------------------------------
            $ptc = strtolower(explode('/',$_SERVER['SERVER_PROTOCOL'])[0]);
            $hst = strtolower($_SERVER['HTTP_HOST']);
            $adr = (trim($pth, 'pub/'));

            set::{'server.addr'}($ptc.'://'.$hst.'/'.$adr);
         // -----------------------------------------------------------------------------------

            $rsp = jsam::build($pth, $vrs);
         }
         else
         {
            $rsl = to::str($rsp);
            $rsp = new obj(['head'=>['HTTP/1.0 200 OK']]);

            $rsp->head[] = 'Content-Type: text/plain';
            $rsp->head[] = 'Content-Length: '.strlen($rsl);

            $rsp->body = $rsl;
         }
      }
   // -----------------------------------------------------------------------------------


   // send headers
   // -----------------------------------------------------------------------------------
      foreach ($rsp->head as $hdr)
      { header($hdr); }
   // -----------------------------------------------------------------------------------


   // send contents
   // -----------------------------------------------------------------------------------
      echo $rsp->body;
   // -----------------------------------------------------------------------------------


   // end process :: success
   // -----------------------------------------------------------------------------------
      exit(0);
   // -----------------------------------------------------------------------------------
   });
// --------------------------------------------------------------------------------------

?>
